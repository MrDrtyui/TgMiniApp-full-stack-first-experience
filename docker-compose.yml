
services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - all

  frontend:
     container_name: frontend
     build:
      context: ./front/
      dockerfile: Dockerfile
     ports:
      - "3000:3000"
     environment:
        - NODE_ENV=production
     volumes:
      - .:/app
     networks:
      - all

  backend:
    container_name: backend
    build:
      context: ./backend/
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - all
    depends_on:
      - postgres

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - all



networks:
  all:
    driver: bridge

volumes:
  postgres_data:

